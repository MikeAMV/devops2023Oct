
node {
  def gitcommit
  stage('VerificaciÃ³n SCM') {
    withCredentials([usernamePassword(credentialsId: 'erielit-user', passwordVariable:'ERIE_PASS', usernameVariable:'ERIE_USR')]){
      checkout scm
      sh "git rev-parse --short HEAD > .git/commit-id"
      sh 'echo "$ERIE_USR"'
      def gitCode = readFile('.git/commit-id').trim()
      println "${ERIE_USR}"
      gitcommit = "${ERIE_USR}/${gitCode}"
      println "${gitcommit}"
    }
  }
  stage('test') {
    properties([
      parameters([
        string(name: "V_NODE", defaultValue: "18", description: "A node version")
      ])
    ])
    def nodeVersion = "${params?.V_NODE}";
    def contenedortest = docker.image()
    contenedortest.pull()
    contenedortest.inside {
      sh 'npm install --only=dev'
      sh 'npm test'
    }
  }
  stage('Docker Build & Push') {
    def promptUser = input(
      id: 'proceed',
      message: 'Are you sure to continue?',
      ok: 'Yes! I do',
      parameters: [
        [$class: 'BooleanParameterDefinition', defaultValue: false, description: '', name: 'Please confirm you sure to proceed']
      ]
    )
    println "Prompted ${prompUser}"
    docker.withRegistry('https://registry.hub.docker.com', 'docker-hub') {
      def nuestraapp = docker.build("erielit/nodeapp:${gitcommit}", ".")
      nuestraapp.push()
    }
  }
  post {
    failure {
      echo "Error deploying"
    }
    success {
      echo "Success build and push"
    }
  }
}
